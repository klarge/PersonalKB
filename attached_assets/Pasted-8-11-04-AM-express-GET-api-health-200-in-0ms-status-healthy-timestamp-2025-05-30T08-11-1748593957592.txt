8:11:04 AM [express] GET /api/health 200 in 0ms :: {"status":"healthy","timestamp":"2025-05-30T08:11…
8:11:23 AM [express] GET /api/auth/user 401 in 1ms :: {"message":"Unauthorized"}
8:11:24 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:11…
8:11:24 AM [express] GET /api/auth/user 401 in 1ms :: {"message":"Unauthorized"}
8:11:34 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:11…
8:12:04 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:12…
8:12:34 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:12…
Registration attempt started
Checking if user exists...
Registration error details: error: relation "users" does not exist
    at /app/node_modules/pg-pool/index.js:45:11
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async file:///app/node_modules/drizzle-orm/node-postgres/session.js:83:22
    at async DatabaseStorage.getUserByEmail (file:///app/dist/index.js:193:24)
    at async file:///app/dist/index.js:683:28 {
  length: 105,
  severity: 'ERROR',
  code: '42P01',
  detail: undefined,
  hint: undefined,
  position: '120',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '1392',
  routine: 'parserOpenTable'
}
8:12:46 AM [express] POST /api/register 500 in 18ms :: {"message":"Registration failed"}
8:13:04 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:13…
8:13:19 AM [express] POST /api/login 500 in 18ms :: {"message":"Login failed"}
8:13:35 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:13…
8:14:05 AM [express] GET /api/health 200 in 0ms :: {"status":"healthy","timestamp":"2025-05-30T08:14…
8:14:35 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:14…
8:15:05 AM [express] GET /api/health 200 in 0ms :: {"status":"healthy","timestamp":"2025-05-30T08:15…
8:15:35 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:15…
8:16:05 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:16…
8:16:35 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:16…
8:17:05 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:17…
8:17:35 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:17…
8:18:06 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:18…
8:18:36 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:18…
8:19:06 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:19…
8:19:36 AM [express] GET /api/health 200 in 0ms :: {"status":"healthy","timestamp":"2025-05-30T08:19…
8:20:06 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:20…
8:20:36 AM [express] GET /api/health 200 in 3ms :: {"status":"healthy","timestamp":"2025-05-30T08:20…
8:21:06 AM [express] GET /api/health 200 in 0ms :: {"status":"healthy","timestamp":"2025-05-30T08:21…
8:21:36 AM [express] GET /api/health 200 in 0ms :: {"status":"healthy","timestamp":"2025-05-30T08:21…
8:22:06 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:22…
8:22:37 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:22…
8:23:07 AM [express] GET /api/health 200 in 0ms :: {"status":"healthy","timestamp":"2025-05-30T08:23…
8:23:37 AM [express] GET /api/health 200 in 0ms :: {"status":"healthy","timestamp":"2025-05-30T08:23…
8:24:08 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:24…
8:24:38 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:24…
8:25:08 AM [express] GET /api/health 200 in 0ms :: {"status":"healthy","timestamp":"2025-05-30T08:25…
8:25:38 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:25…
8:26:08 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:26…
8:26:38 AM [express] GET /api/health 200 in 0ms :: {"status":"healthy","timestamp":"2025-05-30T08:26…
8:27:08 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:27…
8:27:38 AM [express] GET /api/health 200 in 0ms :: {"status":"healthy","timestamp":"2025-05-30T08:27…
8:28:08 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:28…
8:28:39 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:28…
8:29:09 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:29…
8:29:39 AM [express] GET /api/health 200 in 0ms :: {"status":"healthy","timestamp":"2025-05-30T08:29…
8:30:09 AM [express] GET /api/health 200 in 0ms :: {"status":"healthy","timestamp":"2025-05-30T08:30…
8:30:39 AM [express] GET /api/health 200 in 3ms :: {"status":"healthy","timestamp":"2025-05-30T08:30…
Registration attempt started
Checking if user exists...
Registration error details: error: relation "users" does not exist
    at /app/node_modules/pg-pool/index.js:45:11
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async file:///app/node_modules/drizzle-orm/node-postgres/session.js:83:22
    at async DatabaseStorage.getUserByEmail (file:///app/dist/index.js:193:24)
    at async file:///app/dist/index.js:683:28 {
  length: 105,
  severity: 'ERROR',
  code: '42P01',
  detail: undefined,
  hint: undefined,
  position: '120',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_relation.c',
  line: '1392',
  routine: 'parserOpenTable'
}
8:31:03 AM [express] POST /api/register 500 in 17ms :: {"message":"Registration failed"}
8:31:09 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:31…
8:31:39 AM [express] GET /api/health 200 in 1ms :: {"status":"healthy","timestamp":"2025-05-30T08:31…